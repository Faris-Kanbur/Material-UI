[{"C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\index.js":"1","C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\App.js":"2","C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\pages\\Notes.js":"3","C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\pages\\Create.js":"4","C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\components\\NotesCard.js":"5","C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\components\\Layout.js":"6"},{"size":472,"mtime":1619185495302,"results":"7","hashOfConfig":"8"},{"size":1022,"mtime":1619350768959,"results":"9","hashOfConfig":"8"},{"size":953,"mtime":1619346761803,"results":"10","hashOfConfig":"8"},{"size":3456,"mtime":1619342843210,"results":"11","hashOfConfig":"8"},{"size":1699,"mtime":1619470995790,"results":"12","hashOfConfig":"8"},{"size":3783,"mtime":1619470290153,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1pdcdep",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\index.js",[],["29","30"],"C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\App.js",[],"C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\pages\\Notes.js",["31"],"import React,{useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container, Paper } from '@material-ui/core';\r\nimport { NotesCard } from '../components/NotesCard';\r\n\r\nexport default function Notes() {\r\n  const [notes, setNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/notes')\r\n    .then(res => res.json())\r\n    .then(data => setNotes(data))\r\n  }, [])\r\n\r\n  const handleDelete = async (id) => {\r\n    await fetch('http://localhost:8000/notes/' + id, {\r\n      method: 'DELETE'\r\n    })\r\n\r\n    const newNotes = notes.filter(note => note.id !== id )\r\n\r\n    setNotes(newNotes)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        {notes.map(note => (\r\n          <Grid item key={note.id} xs={12} md={6} lg={4} >\r\n            <NotesCard note={note} handleDelete={handleDelete}/>\r\n          </Grid>\r\n        ))}\r\n        </Grid>\r\n        \r\n    </Container>\r\n  )\r\n}\r\n","C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\pages\\Create.js",["32"],"import React, {useState} from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Container from '@material-ui/core/Container';\r\nimport SendIcon from '@material-ui/icons/SendOutlined';\r\nimport KeyboardArrowRightOutlinedIcon from '@material-ui/icons/KeyboardArrowRightOutlined';\r\nimport {FormControlLabel, makeStyles} from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  filed:{\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    display: 'block',\r\n  }\r\n})\r\n\r\nexport default function Create() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState('')\r\n  const [details, setDetails] = useState('')\r\n  const [titleError, setTitleError] = useState(false)\r\n  const [detailsError, setDetailsError] = useState(false)\r\n  const [category, setCategory] = useState('todos')\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setTitleError(false);\r\n    setDetailsError(false);\r\n\r\n    if ( title === '') {\r\n      setTitleError(true)\r\n    };\r\n\r\n    if ( title === '') {\r\n      setDetailsError(true)\r\n    };\r\n\r\n    if(title && details) {\r\n      fetch('http://localhost:8000/notes' , {\r\n        method: 'POST',\r\n        headers: {\"Content-type\" : \"application/json\"},\r\n        body: JSON.stringify({title, details, category })\r\n      }).then(() => history.push('/'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Typography \r\n      className={classes.title}\r\n      variant=\"h6\" \r\n      color=\"textSecondary\" \r\n      component=\"h2\" \r\n      gutterBottom>\r\n        Create a New Note\r\n      </Typography>\r\n\r\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <TextField\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        className={classes.filed} \r\n        label=\"Note Title\"\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        fullWidth\r\n        required\r\n        error={titleError}\r\n        />\r\n\r\n        <TextField\r\n        onChange={(e) => setDetails(e.target.value)}\r\n        className={classes.filed} \r\n        label=\"Details\"\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        // multiline\r\n        rows={4}\r\n        fullWidth\r\n        required\r\n        error={detailsError}\r\n        />  \r\n\r\n        <FormControl className={classes.filed}>\r\n          <FormLabel>Note Category</FormLabel>\r\n            <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\r\n              <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\"/>\r\n              <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\"/>\r\n              <FormControlLabel value=\"reminders\" control={<Radio />} label=\"Reminders\"/>\r\n              <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\"/>\r\n            </RadioGroup>\r\n        </FormControl>\r\n\r\n      <Button \r\n      type=\"submit\" \r\n      color=\"secondary\" \r\n      variant=\"contained\"\r\n      // startIcon={<SendIcon />}\r\n      endIcon={<KeyboardArrowRightOutlinedIcon />}\r\n      >\r\n      Submit\r\n      </Button>\r\n      </form>\r\n      <br/>\r\n      \r\n    </Container>\r\n  )\r\n}\r\n","C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\components\\NotesCard.js",[],"C:\\Users\\faris\\Material-UI\\material-ui-tut\\src\\components\\Layout.js",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":3,"column":21,"nodeType":"40","messageId":"41","endLine":3,"endColumn":26},{"ruleId":"38","severity":1,"message":"42","line":8,"column":8,"nodeType":"40","messageId":"41","endLine":8,"endColumn":16},{"ruleId":"38","severity":1,"message":"43","line":2,"column":22,"nodeType":"40","messageId":"41","endLine":2,"endColumn":35},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'SendIcon' is defined but never used.","'ThemeProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]